<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.1.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd ">

<!-- 加载配置文件 -->
<context:property-placeholder location="classpath:db.properties"/>

<!-- 数据库连接池 -->
 <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
       <property name="driverClass" value="${jdbc.driver}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<property name="user" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	<!-- 	开发阶段建议最大连接数据尽量少，够用即可 -->
		<property name="maxPoolSize" value="${jdbc.maxActive}"/>
		<property name="minPoolSize" value="${jdbc.maxIdle}"/>
</bean> 
<!-- 事务管理器 -->
<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<!-- 数据源 -->
	<property name="dataSource" ref="dataSource"/>
</bean>

<!-- 通知 -->
<tx:advice id="txAdvice" transaction-manager="transactionManager">
  <tx:attributes>
     <!-- 传播行为 -->
      <tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
    <tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
    <tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
    <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
    <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
    <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
    <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
  </tx:attributes>
</tx:advice>

<!-- 切面 -->
    <aop:config proxy-target-class="true">
      <aop:advisor advice-ref="txAdvice"
      pointcut="execution(* com.jim.yygh.service.impl.*.*(..))"/>
    </aop:config>

<!-- <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    加载数据源
    <property name="dataSource" ref="dataSource"/>
    <property name="typeAliasesPackage" value="com.foresee.entity"></property>
    配置SqlMapConfig.xml
    <property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml"/>
</bean>


<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
   配置扫描包路径 ，如果扫描多个包路径，中间使用半角逗号分隔
   <property name="basePackage" value="com.foresee.dao"/>
    配置SqlSessionFactory
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
</bean> -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 加载数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置SqlMapConfig.xml -->
        <property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 配置扫描包路径 ，如果扫描多个包路径，中间使用半角逗号分隔-->
        <property name="basePackage" value="com.jim.yygh.dao"/>
        <!-- 配置SqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>



    <!--<bean id="ksxxService" class="com.jim.yygh.service.impl.KsxxService"></bean>-->


    <context:component-scan base-package="com.jim.yygh.service.impl">
     <!--   <context:include-filter type="" expression=""></context:include-filter>
        <context:exclude-filter type="" expression=""></context:exclude-filter>-->

    </context:component-scan>


</beans>