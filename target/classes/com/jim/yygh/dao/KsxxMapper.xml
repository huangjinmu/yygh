<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jim.yygh.dao.KsxxMapper" >
  <resultMap id="BaseResultMap" type="com.jim.yygh.entity.po.Ksxx" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="ks_name" property="ksName" jdbcType="VARCHAR" />
    <result column="ksjj" property="ksjj" jdbcType="VARCHAR" />
    <result column="sfsc" property="sfsc" jdbcType="CHAR" />
    <result column="ksjs" property="ksjs" jdbcType="VARCHAR" />
    <result column="addtime" property="addtime" jdbcType="TIMESTAMP" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, ks_name, ksjj, sfsc, ksjs, addtime, pid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jim.yygh.entity.po.KsxxExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ksxx
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ksxx
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ksxx
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jim.yygh.entity.po.KsxxExample" >
    delete from ksxx
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jim.yygh.entity.po.Ksxx" >
    insert into ksxx (id, ks_name, ksjj, 
      sfsc, ksjs, addtime, 
      pid)
    values (#{id,jdbcType=INTEGER}, #{ksName,jdbcType=VARCHAR}, #{ksjj,jdbcType=VARCHAR}, 
      #{sfsc,jdbcType=CHAR}, #{ksjs,jdbcType=VARCHAR}, #{addtime,jdbcType=TIMESTAMP}, 
      #{pid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jim.yygh.entity.po.Ksxx" >
    insert into ksxx
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="ksName != null" >
        ks_name,
      </if>
      <if test="ksjj != null" >
        ksjj,
      </if>
      <if test="sfsc != null" >
        sfsc,
      </if>
      <if test="ksjs != null" >
        ksjs,
      </if>
      <if test="addtime != null" >
        addtime,
      </if>
      <if test="pid != null" >
        pid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ksName != null" >
        #{ksName,jdbcType=VARCHAR},
      </if>
      <if test="ksjj != null" >
        #{ksjj,jdbcType=VARCHAR},
      </if>
      <if test="sfsc != null" >
        #{sfsc,jdbcType=CHAR},
      </if>
      <if test="ksjs != null" >
        #{ksjs,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jim.yygh.entity.po.KsxxExample" resultType="java.lang.Integer" >
    select count(*) from ksxx
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ksxx
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ksName != null" >
        ks_name = #{record.ksName,jdbcType=VARCHAR},
      </if>
      <if test="record.ksjj != null" >
        ksjj = #{record.ksjj,jdbcType=VARCHAR},
      </if>
      <if test="record.sfsc != null" >
        sfsc = #{record.sfsc,jdbcType=CHAR},
      </if>
      <if test="record.ksjs != null" >
        ksjs = #{record.ksjs,jdbcType=VARCHAR},
      </if>
      <if test="record.addtime != null" >
        addtime = #{record.addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ksxx
    set id = #{record.id,jdbcType=INTEGER},
      ks_name = #{record.ksName,jdbcType=VARCHAR},
      ksjj = #{record.ksjj,jdbcType=VARCHAR},
      sfsc = #{record.sfsc,jdbcType=CHAR},
      ksjs = #{record.ksjs,jdbcType=VARCHAR},
      addtime = #{record.addtime,jdbcType=TIMESTAMP},
      pid = #{record.pid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jim.yygh.entity.po.Ksxx" >
    update ksxx
    <set >
      <if test="ksName != null" >
        ks_name = #{ksName,jdbcType=VARCHAR},
      </if>
      <if test="ksjj != null" >
        ksjj = #{ksjj,jdbcType=VARCHAR},
      </if>
      <if test="sfsc != null" >
        sfsc = #{sfsc,jdbcType=CHAR},
      </if>
      <if test="ksjs != null" >
        ksjs = #{ksjs,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        addtime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jim.yygh.entity.po.Ksxx" >
    update ksxx
    set ks_name = #{ksName,jdbcType=VARCHAR},
      ksjj = #{ksjj,jdbcType=VARCHAR},
      sfsc = #{sfsc,jdbcType=CHAR},
      ksjs = #{ksjs,jdbcType=VARCHAR},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      pid = #{pid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>